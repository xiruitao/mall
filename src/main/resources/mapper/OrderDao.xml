<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.OrderDao">
    <resultMap id="OrderResultMap" type="com.mall.entity.Order">
        <id column="order_id" jdbcType="VARCHAR" property="orderId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="order_price" jdbcType="DECIMAL" property="orderPrice" />
        <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
        <result column="points_number" jdbcType="INTEGER" property="pointsNumber" />
        <result column="address_id" jdbcType="INTEGER" property="addressId" />
        <result column="recipient_name" jdbcType="VARCHAR" property="recipientName" />
        <result column="recipient_phone" jdbcType="VARCHAR" property="recipientPhone" />
        <result column="address_detail" jdbcType="VARCHAR" property="addressDetail" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>

    <insert id="insertSelective" parameterType="com.mall.entity.Order" keyProperty="orderId" useGeneratedKeys="true">
        insert into order_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderPrice != null">
                order_price,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="pointsNumber != null">
                points_number,
            </if>
            <if test="addressId != null">
                address_id,
            </if>
            <if test="recipientName != null">
                recipient_name,
            </if>
            <if test="recipientPhone != null">
                recipient_phone,
            </if>
            <if test="addressDetail != null">
                address_detail,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="orderPrice != null">
                #{orderPrice,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=TINYINT},
            </if>
            <if test="pointsNumber != null">
                #{pointsNumber,jdbcType=DECIMAL},
            </if>
            <if test="addressId != null">
                #{addressId,jdbcType=INTEGER},
            </if>
            <if test="recipientName != null">
                #{recipientName,jdbcType=VARCHAR},
            </if>
            <if test="recipientPhone != null">
                #{recipientPhone,jdbcType=VARCHAR},
            </if>
            <if test="addressDetail != null">
                #{addressDetail,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="selectOrderAll" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info order by create_time desc
    </select>

    <select id="selectOrderOfUser" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        where user_id = #{userId,jdbcType=INTEGER} and order_status &lt; 2
        order by create_time desc
    </select>

    <select id="selectEndOrderOfUser" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        where user_id = #{userId,jdbcType=INTEGER} and order_status = 2
        order by create_time desc
    </select>

    <select id="selectOrderOfUserCancel" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        where user_id = #{userId,jdbcType=INTEGER} and (order_status = 3 or order_status = 4)
        order by create_time desc
    </select>

    <select id="selectOrder" parameterType="java.lang.String" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <select id="selectOrderRows" resultType="java.lang.Integer">
        select count(order_id) from order_info
    </select>

    <select id="listOrderPages" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <select id="orderSearch" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        where order_id like "%"#{field}"%" or user_id like "%"#{field}"%"
        order by create_time desc
    </select>

    <select id="selectOrderByStatus" resultMap="OrderResultMap">
        select order_id, user_id, order_price, order_status, points_number, address_id, recipient_name, recipient_phone, address_detail, create_time
        from order_info
        where order_status = #{orderStatus}
        order by create_time desc
    </select>

    <delete id="deleteOrder" parameterType="java.lang.String">
        delete from order_info
        where order_id = #{orderId,jdbcType=VARCHAR}
    </delete>

    <update id="updateOrder">
        update order_info
        set user_id = #{userId,jdbcType=INTEGER},
        order_price = #{orderPrice,jdbcType=DECIMAL},
        order_status = #{orderStatus,jdbcType=TINYINT},
        points_number = #{pointsNumber,jdbcType=INTEGER},
        address_id = #{addressId,jdbcType=INTEGER},
        recipient_name = #{recipientName,jdbcType=VARCHAR},
        recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
        address_detail = #{addressDetail,jdbcType=VARCHAR}
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
</mapper>